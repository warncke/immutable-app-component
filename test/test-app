'use strict'

const ImmutableAccessControl = require('immutable-access-control')
const ImmutableDatabaseMariaSQL = require('immutable-database-mariasql')
const ImmutableApp = require('immutable-app')
const ImmutableAppComponent = require('../lib/immutable-app-component')

const dbHost = process.env.DB_HOST || 'localhost'
const dbName = process.env.DB_NAME || 'test'
const dbPass = process.env.DB_PASS || ''
const dbUser = process.env.DB_USER || 'root'

// use the same params for all connections
const connectionParams = {
    charset: 'utf8',
    db: dbName,
    host: dbHost,
    password: dbPass,
    user: dbUser,
}
// create database connection to use for testing
var database = new ImmutableDatabaseMariaSQL(connectionParams)

// get access control provider
var accessControl = new ImmutableAccessControl()
// disable strict mode since auth not being used
accessControl.strict = false

run().catch(err => console.error(err.stack))

async function run () {
    var app = ImmutableApp('test-app')
    // set configuration for testing
    app.config({
        // set default database
        database: {
            default: database,
        },
    })
    // start server
    await app.start()
}